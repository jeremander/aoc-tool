- Migrate to multi-file project structure
    - split main from library
    - 'scaffold' command should clearly indicate which file to edit
- Unit test scaffolding
    - 'aoctool test' command
    - use puzzle.examples to fetch examples during scaffolding
    - include placeholder for a new test of component function
    - Languages
        - Python
            - pytest to check examples
        - Rust
        - Haskell
- Lines of code counting
    - Lines with and without whitespace, comments
        - might need to rely on language-specific tools
    - Total characters
- Timing
    - Naive timing by wrapping calls in Python timer
    - Compile stage: naive timing OK
    - Run stage: start with naive timing
        - Eventually expose timing functions within the scaffolds themselves
    - Output function runtimes in standard format on stderr
        - Parsing
        - Solving
    - Be careful when timing Haskell due to lazy evaluation
- Run multiple puzzles at once (give it root directory?)
    - Gather all diagnostics into a JSON
    - Statistics and plots
- Upload to PyPI